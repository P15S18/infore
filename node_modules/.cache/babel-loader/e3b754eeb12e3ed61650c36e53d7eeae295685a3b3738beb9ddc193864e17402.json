{"ast":null,"code":"import COLORS from'./colors.json';import{varAlpha,createPaletteChannel}from'../styles';// ----------------------------------------------------------------------\n// ----------------------------------------------------------------------\n// Grey\nexport const grey=createPaletteChannel(COLORS.grey);// Primary\nexport const primary=createPaletteChannel(COLORS.primary);// Secondary\nexport const secondary=createPaletteChannel(COLORS.secondary);// Info\nexport const info=createPaletteChannel(COLORS.info);// Success\nexport const success=createPaletteChannel(COLORS.success);// Warning\nexport const warning=createPaletteChannel(COLORS.warning);// Error\nexport const error=createPaletteChannel(COLORS.error);// Common\nexport const common=createPaletteChannel(COLORS.common);// Text\nexport const text={light:createPaletteChannel({primary:grey[800],secondary:grey[600],disabled:grey[500]})};// Background\nexport const background={light:createPaletteChannel({paper:'#FFFFFF',default:grey[100],neutral:grey[200]})};// Action\nexport const baseAction={hover:varAlpha(grey['500Channel'],0.08),selected:varAlpha(grey['500Channel'],0.16),focus:varAlpha(grey['500Channel'],0.24),disabled:varAlpha(grey['500Channel'],0.8),disabledBackground:varAlpha(grey['500Channel'],0.24),hoverOpacity:0.08,disabledOpacity:0.48};export const action={light:{...baseAction,active:grey[600]}};/*\n * Base palette\n */export const basePalette={primary,secondary,info,success,warning,error,grey,common,divider:varAlpha(grey['500Channel'],0.2),action};export const lightPalette={...basePalette,text:text.light,background:background.light,action:action.light};// ----------------------------------------------------------------------\nexport const colorSchemes={light:{palette:lightPalette}};","map":{"version":3,"names":["COLORS","varAlpha","createPaletteChannel","grey","primary","secondary","info","success","warning","error","common","text","light","disabled","background","paper","default","neutral","baseAction","hover","selected","focus","disabledBackground","hoverOpacity","disabledOpacity","action","active","basePalette","divider","lightPalette","colorSchemes","palette"],"sources":["/home/deva/Desktop/shivam/infore/src/theme/core/palette.ts"],"sourcesContent":["import type { ColorSystemOptions } from '@mui/material/styles';\n\nimport COLORS from './colors.json';\nimport { varAlpha, createPaletteChannel } from '../styles';\n\n// ----------------------------------------------------------------------\n\ndeclare module '@mui/material/styles/createPalette' {\n  interface CommonColors {\n    whiteChannel: string;\n    blackChannel: string;\n  }\n  interface TypeText {\n    disabledChannel: string;\n  }\n  interface TypeBackground {\n    neutral: string;\n    neutralChannel: string;\n  }\n  interface SimplePaletteColorOptions {\n    lighter: string;\n    darker: string;\n    lighterChannel: string;\n    darkerChannel: string;\n  }\n  interface PaletteColor {\n    lighter: string;\n    darker: string;\n    lighterChannel: string;\n    darkerChannel: string;\n  }\n}\n\ndeclare module '@mui/material/styles' {\n  interface ThemeVars {\n    transitions: Theme['transitions'];\n  }\n}\n\ndeclare module '@mui/material' {\n  interface Color {\n    ['50Channel']: string;\n    ['100Channel']: string;\n    ['200Channel']: string;\n    ['300Channel']: string;\n    ['400Channel']: string;\n    ['500Channel']: string;\n    ['600Channel']: string;\n    ['700Channel']: string;\n    ['800Channel']: string;\n    ['900Channel']: string;\n  }\n}\n\nexport type ColorType = 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error';\n\n// ----------------------------------------------------------------------\n\n// Grey\nexport const grey = createPaletteChannel(COLORS.grey);\n\n// Primary\nexport const primary = createPaletteChannel(COLORS.primary);\n\n// Secondary\nexport const secondary = createPaletteChannel(COLORS.secondary);\n\n// Info\nexport const info = createPaletteChannel(COLORS.info);\n\n// Success\nexport const success = createPaletteChannel(COLORS.success);\n\n// Warning\nexport const warning = createPaletteChannel(COLORS.warning);\n\n// Error\nexport const error = createPaletteChannel(COLORS.error);\n\n// Common\nexport const common = createPaletteChannel(COLORS.common);\n\n// Text\nexport const text = {\n  light: createPaletteChannel({\n    primary: grey[800],\n    secondary: grey[600],\n    disabled: grey[500],\n  }),\n};\n\n// Background\nexport const background = {\n  light: createPaletteChannel({\n    paper: '#FFFFFF',\n    default: grey[100],\n    neutral: grey[200],\n  }),\n};\n\n// Action\nexport const baseAction = {\n  hover: varAlpha(grey['500Channel'], 0.08),\n  selected: varAlpha(grey['500Channel'], 0.16),\n  focus: varAlpha(grey['500Channel'], 0.24),\n  disabled: varAlpha(grey['500Channel'], 0.8),\n  disabledBackground: varAlpha(grey['500Channel'], 0.24),\n  hoverOpacity: 0.08,\n  disabledOpacity: 0.48,\n};\n\nexport const action = {\n  light: { ...baseAction, active: grey[600] },\n};\n\n/*\n * Base palette\n */\nexport const basePalette = {\n  primary,\n  secondary,\n  info,\n  success,\n  warning,\n  error,\n  grey,\n  common,\n  divider: varAlpha(grey['500Channel'], 0.2),\n  action,\n};\n\nexport const lightPalette = {\n  ...basePalette,\n  text: text.light,\n  background: background.light,\n  action: action.light,\n};\n\n// ----------------------------------------------------------------------\n\nexport const colorSchemes: Partial<Record<'light', ColorSystemOptions>> = {\n  light: { palette: lightPalette },\n};\n"],"mappings":"AAEA,MAAO,CAAAA,MAAM,KAAM,eAAe,CAClC,OAASC,QAAQ,CAAEC,oBAAoB,KAAQ,WAAW,CAE1D;AAmDA;AAEA;AACA,MAAO,MAAM,CAAAC,IAAI,CAAGD,oBAAoB,CAACF,MAAM,CAACG,IAAI,CAAC,CAErD;AACA,MAAO,MAAM,CAAAC,OAAO,CAAGF,oBAAoB,CAACF,MAAM,CAACI,OAAO,CAAC,CAE3D;AACA,MAAO,MAAM,CAAAC,SAAS,CAAGH,oBAAoB,CAACF,MAAM,CAACK,SAAS,CAAC,CAE/D;AACA,MAAO,MAAM,CAAAC,IAAI,CAAGJ,oBAAoB,CAACF,MAAM,CAACM,IAAI,CAAC,CAErD;AACA,MAAO,MAAM,CAAAC,OAAO,CAAGL,oBAAoB,CAACF,MAAM,CAACO,OAAO,CAAC,CAE3D;AACA,MAAO,MAAM,CAAAC,OAAO,CAAGN,oBAAoB,CAACF,MAAM,CAACQ,OAAO,CAAC,CAE3D;AACA,MAAO,MAAM,CAAAC,KAAK,CAAGP,oBAAoB,CAACF,MAAM,CAACS,KAAK,CAAC,CAEvD;AACA,MAAO,MAAM,CAAAC,MAAM,CAAGR,oBAAoB,CAACF,MAAM,CAACU,MAAM,CAAC,CAEzD;AACA,MAAO,MAAM,CAAAC,IAAI,CAAG,CAClBC,KAAK,CAAEV,oBAAoB,CAAC,CAC1BE,OAAO,CAAED,IAAI,CAAC,GAAG,CAAC,CAClBE,SAAS,CAAEF,IAAI,CAAC,GAAG,CAAC,CACpBU,QAAQ,CAAEV,IAAI,CAAC,GAAG,CACpB,CAAC,CACH,CAAC,CAED;AACA,MAAO,MAAM,CAAAW,UAAU,CAAG,CACxBF,KAAK,CAAEV,oBAAoB,CAAC,CAC1Ba,KAAK,CAAE,SAAS,CAChBC,OAAO,CAAEb,IAAI,CAAC,GAAG,CAAC,CAClBc,OAAO,CAAEd,IAAI,CAAC,GAAG,CACnB,CAAC,CACH,CAAC,CAED;AACA,MAAO,MAAM,CAAAe,UAAU,CAAG,CACxBC,KAAK,CAAElB,QAAQ,CAACE,IAAI,CAAC,YAAY,CAAC,CAAE,IAAI,CAAC,CACzCiB,QAAQ,CAAEnB,QAAQ,CAACE,IAAI,CAAC,YAAY,CAAC,CAAE,IAAI,CAAC,CAC5CkB,KAAK,CAAEpB,QAAQ,CAACE,IAAI,CAAC,YAAY,CAAC,CAAE,IAAI,CAAC,CACzCU,QAAQ,CAAEZ,QAAQ,CAACE,IAAI,CAAC,YAAY,CAAC,CAAE,GAAG,CAAC,CAC3CmB,kBAAkB,CAAErB,QAAQ,CAACE,IAAI,CAAC,YAAY,CAAC,CAAE,IAAI,CAAC,CACtDoB,YAAY,CAAE,IAAI,CAClBC,eAAe,CAAE,IACnB,CAAC,CAED,MAAO,MAAM,CAAAC,MAAM,CAAG,CACpBb,KAAK,CAAE,CAAE,GAAGM,UAAU,CAAEQ,MAAM,CAAEvB,IAAI,CAAC,GAAG,CAAE,CAC5C,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAwB,WAAW,CAAG,CACzBvB,OAAO,CACPC,SAAS,CACTC,IAAI,CACJC,OAAO,CACPC,OAAO,CACPC,KAAK,CACLN,IAAI,CACJO,MAAM,CACNkB,OAAO,CAAE3B,QAAQ,CAACE,IAAI,CAAC,YAAY,CAAC,CAAE,GAAG,CAAC,CAC1CsB,MACF,CAAC,CAED,MAAO,MAAM,CAAAI,YAAY,CAAG,CAC1B,GAAGF,WAAW,CACdhB,IAAI,CAAEA,IAAI,CAACC,KAAK,CAChBE,UAAU,CAAEA,UAAU,CAACF,KAAK,CAC5Ba,MAAM,CAAEA,MAAM,CAACb,KACjB,CAAC,CAED;AAEA,MAAO,MAAM,CAAAkB,YAA0D,CAAG,CACxElB,KAAK,CAAE,CAAEmB,OAAO,CAAEF,YAAa,CACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}