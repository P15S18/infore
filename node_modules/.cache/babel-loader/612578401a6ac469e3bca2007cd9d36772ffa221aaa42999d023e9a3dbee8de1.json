{"ast":null,"code":"import ReactDOM from'react-dom/client';import{Suspense,StrictMode}from'react';import{BrowserRouter}from'react-router-dom';import{HelmetProvider}from'react-helmet-async';import App from'./app';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(StrictMode,{children:/*#__PURE__*/_jsx(HelmetProvider,{children:/*#__PURE__*/_jsx(BrowserRouter,{basename:\"/bharatinfo\",children:/*#__PURE__*/_jsx(Suspense,{children:/*#__PURE__*/_jsx(App,{})})})})}));","map":{"version":3,"names":["ReactDOM","Suspense","StrictMode","BrowserRouter","HelmetProvider","App","jsx","_jsx","root","createRoot","document","getElementById","render","children","basename"],"sources":["/home/deva/Desktop/shivam/infore/src/index.tsx"],"sourcesContent":["import ReactDOM from 'react-dom/client';\nimport { Suspense, StrictMode } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport App from './app';\n\n// ----------------------------------------------------------------------\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\n\nroot.render(\n  <StrictMode>\n    <HelmetProvider>\n      <BrowserRouter basename=\"/bharatinfo\">\n        <Suspense>\n          <App />\n        </Suspense>\n      </BrowserRouter>\n    </HelmetProvider>\n  </StrictMode>\n);\n"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,kBAAkB,CACvC,OAASC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC5C,OAASC,aAAa,KAAQ,kBAAkB,CAChD,OAASC,cAAc,KAAQ,oBAAoB,CAEnD,MAAO,CAAAC,GAAG,KAAM,OAAO,CAEvB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,KAAM,CAAAC,IAAI,CAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAgB,CAAC,CAEhFH,IAAI,CAACI,MAAM,cACTL,IAAA,CAACL,UAAU,EAAAW,QAAA,cACTN,IAAA,CAACH,cAAc,EAAAS,QAAA,cACbN,IAAA,CAACJ,aAAa,EAACW,QAAQ,CAAC,aAAa,CAAAD,QAAA,cACnCN,IAAA,CAACN,QAAQ,EAAAY,QAAA,cACPN,IAAA,CAACF,GAAG,GAAE,CAAC,CACC,CAAC,CACE,CAAC,CACF,CAAC,CACP,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}