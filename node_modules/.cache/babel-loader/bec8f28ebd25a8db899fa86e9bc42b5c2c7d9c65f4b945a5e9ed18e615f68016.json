{"ast":null,"code":"/*\n * Locales code\n * https://gist.github.com/raushankrjha/d1c7e35cf87e69aa8b4208a8171a8416\n */const DEFAULT_LOCALE={code:'en-US',currency:'USD'};function processInput(inputValue){if(inputValue==null||Number.isNaN(inputValue))return null;return Number(inputValue);}// ----------------------------------------------------------------------\nexport function fNumber(inputValue,options){const locale=DEFAULT_LOCALE;const number=processInput(inputValue);if(number===null)return'';const fm=new Intl.NumberFormat(locale.code,{minimumFractionDigits:0,maximumFractionDigits:2,...options}).format(number);return fm;}// ----------------------------------------------------------------------\nexport function fCurrency(inputValue,options){const locale=DEFAULT_LOCALE;const number=processInput(inputValue);if(number===null)return'';const fm=new Intl.NumberFormat(locale.code,{style:'currency',currency:locale.currency,minimumFractionDigits:0,maximumFractionDigits:2,...options}).format(number);return fm;}// ----------------------------------------------------------------------\nexport function fPercent(inputValue,options){const locale=DEFAULT_LOCALE;const number=processInput(inputValue);if(number===null)return'';const fm=new Intl.NumberFormat(locale.code,{style:'percent',minimumFractionDigits:0,maximumFractionDigits:1,...options}).format(number/100);return fm;}// ----------------------------------------------------------------------\nexport function fShortenNumber(inputValue,options){const locale=DEFAULT_LOCALE;const number=processInput(inputValue);if(number===null)return'';const fm=new Intl.NumberFormat(locale.code,{notation:'compact',maximumFractionDigits:2,...options}).format(number);return fm.replace(/[A-Z]/g,match=>match.toLowerCase());}// ----------------------------------------------------------------------\nexport function fData(inputValue){const number=processInput(inputValue);if(number===null||number===0)return'0 bytes';const units=['bytes','Kb','Mb','Gb','Tb','Pb','Eb','Zb','Yb'];const decimal=2;const baseValue=1024;const index=Math.floor(Math.log(number)/Math.log(baseValue));const fm=`${parseFloat((number/baseValue**index).toFixed(decimal))} ${units[index]}`;return fm;}","map":{"version":3,"names":["DEFAULT_LOCALE","code","currency","processInput","inputValue","Number","isNaN","fNumber","options","locale","number","fm","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","fCurrency","style","fPercent","fShortenNumber","notation","replace","match","toLowerCase","fData","units","decimal","baseValue","index","Math","floor","log","parseFloat","toFixed"],"sources":["/home/deva/Desktop/shivam/infore/src/utils/format-number.ts"],"sourcesContent":["/*\n * Locales code\n * https://gist.github.com/raushankrjha/d1c7e35cf87e69aa8b4208a8171a8416\n */\n\nexport type InputNumberValue = string | number | null | undefined;\n\ntype Options = Intl.NumberFormatOptions | undefined;\n\nconst DEFAULT_LOCALE = { code: 'en-US', currency: 'USD' };\n\nfunction processInput(inputValue: InputNumberValue): number | null {\n  if (inputValue == null || Number.isNaN(inputValue)) return null;\n  return Number(inputValue);\n}\n\n// ----------------------------------------------------------------------\n\nexport function fNumber(inputValue: InputNumberValue, options?: Options) {\n  const locale = DEFAULT_LOCALE;\n\n  const number = processInput(inputValue);\n  if (number === null) return '';\n\n  const fm = new Intl.NumberFormat(locale.code, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    ...options,\n  }).format(number);\n\n  return fm;\n}\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(inputValue: InputNumberValue, options?: Options) {\n  const locale = DEFAULT_LOCALE;\n\n  const number = processInput(inputValue);\n  if (number === null) return '';\n\n  const fm = new Intl.NumberFormat(locale.code, {\n    style: 'currency',\n    currency: locale.currency,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n    ...options,\n  }).format(number);\n\n  return fm;\n}\n\n// ----------------------------------------------------------------------\n\nexport function fPercent(inputValue: InputNumberValue, options?: Options) {\n  const locale = DEFAULT_LOCALE;\n\n  const number = processInput(inputValue);\n  if (number === null) return '';\n\n  const fm = new Intl.NumberFormat(locale.code, {\n    style: 'percent',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 1,\n    ...options,\n  }).format(number / 100);\n\n  return fm;\n}\n\n// ----------------------------------------------------------------------\n\nexport function fShortenNumber(inputValue: InputNumberValue, options?: Options) {\n  const locale = DEFAULT_LOCALE;\n\n  const number = processInput(inputValue);\n  if (number === null) return '';\n\n  const fm = new Intl.NumberFormat(locale.code, {\n    notation: 'compact',\n    maximumFractionDigits: 2,\n    ...options,\n  }).format(number);\n\n  return fm.replace(/[A-Z]/g, (match) => match.toLowerCase());\n}\n\n// ----------------------------------------------------------------------\n\nexport function fData(inputValue: InputNumberValue) {\n  const number = processInput(inputValue);\n  if (number === null || number === 0) return '0 bytes';\n\n  const units = ['bytes', 'Kb', 'Mb', 'Gb', 'Tb', 'Pb', 'Eb', 'Zb', 'Yb'];\n  const decimal = 2;\n  const baseValue = 1024;\n\n  const index = Math.floor(Math.log(number) / Math.log(baseValue));\n  const fm = `${parseFloat((number / baseValue ** index).toFixed(decimal))} ${units[index]}`;\n\n  return fm;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,GAMA,KAAM,CAAAA,cAAc,CAAG,CAAEC,IAAI,CAAE,OAAO,CAAEC,QAAQ,CAAE,KAAM,CAAC,CAEzD,QAAS,CAAAC,YAAYA,CAACC,UAA4B,CAAiB,CACjE,GAAIA,UAAU,EAAI,IAAI,EAAIC,MAAM,CAACC,KAAK,CAACF,UAAU,CAAC,CAAE,MAAO,KAAI,CAC/D,MAAO,CAAAC,MAAM,CAACD,UAAU,CAAC,CAC3B,CAEA;AAEA,MAAO,SAAS,CAAAG,OAAOA,CAACH,UAA4B,CAAEI,OAAiB,CAAE,CACvE,KAAM,CAAAC,MAAM,CAAGT,cAAc,CAE7B,KAAM,CAAAU,MAAM,CAAGP,YAAY,CAACC,UAAU,CAAC,CACvC,GAAIM,MAAM,GAAK,IAAI,CAAE,MAAO,EAAE,CAE9B,KAAM,CAAAC,EAAE,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAACJ,MAAM,CAACR,IAAI,CAAE,CAC5Ca,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CAAC,CACxB,GAAGP,OACL,CAAC,CAAC,CAACQ,MAAM,CAACN,MAAM,CAAC,CAEjB,MAAO,CAAAC,EAAE,CACX,CAEA;AAEA,MAAO,SAAS,CAAAM,SAASA,CAACb,UAA4B,CAAEI,OAAiB,CAAE,CACzE,KAAM,CAAAC,MAAM,CAAGT,cAAc,CAE7B,KAAM,CAAAU,MAAM,CAAGP,YAAY,CAACC,UAAU,CAAC,CACvC,GAAIM,MAAM,GAAK,IAAI,CAAE,MAAO,EAAE,CAE9B,KAAM,CAAAC,EAAE,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAACJ,MAAM,CAACR,IAAI,CAAE,CAC5CiB,KAAK,CAAE,UAAU,CACjBhB,QAAQ,CAAEO,MAAM,CAACP,QAAQ,CACzBY,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CAAC,CACxB,GAAGP,OACL,CAAC,CAAC,CAACQ,MAAM,CAACN,MAAM,CAAC,CAEjB,MAAO,CAAAC,EAAE,CACX,CAEA;AAEA,MAAO,SAAS,CAAAQ,QAAQA,CAACf,UAA4B,CAAEI,OAAiB,CAAE,CACxE,KAAM,CAAAC,MAAM,CAAGT,cAAc,CAE7B,KAAM,CAAAU,MAAM,CAAGP,YAAY,CAACC,UAAU,CAAC,CACvC,GAAIM,MAAM,GAAK,IAAI,CAAE,MAAO,EAAE,CAE9B,KAAM,CAAAC,EAAE,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAACJ,MAAM,CAACR,IAAI,CAAE,CAC5CiB,KAAK,CAAE,SAAS,CAChBJ,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CAAC,CACxB,GAAGP,OACL,CAAC,CAAC,CAACQ,MAAM,CAACN,MAAM,CAAG,GAAG,CAAC,CAEvB,MAAO,CAAAC,EAAE,CACX,CAEA;AAEA,MAAO,SAAS,CAAAS,cAAcA,CAAChB,UAA4B,CAAEI,OAAiB,CAAE,CAC9E,KAAM,CAAAC,MAAM,CAAGT,cAAc,CAE7B,KAAM,CAAAU,MAAM,CAAGP,YAAY,CAACC,UAAU,CAAC,CACvC,GAAIM,MAAM,GAAK,IAAI,CAAE,MAAO,EAAE,CAE9B,KAAM,CAAAC,EAAE,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAACJ,MAAM,CAACR,IAAI,CAAE,CAC5CoB,QAAQ,CAAE,SAAS,CACnBN,qBAAqB,CAAE,CAAC,CACxB,GAAGP,OACL,CAAC,CAAC,CAACQ,MAAM,CAACN,MAAM,CAAC,CAEjB,MAAO,CAAAC,EAAE,CAACW,OAAO,CAAC,QAAQ,CAAGC,KAAK,EAAKA,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC,CAC7D,CAEA;AAEA,MAAO,SAAS,CAAAC,KAAKA,CAACrB,UAA4B,CAAE,CAClD,KAAM,CAAAM,MAAM,CAAGP,YAAY,CAACC,UAAU,CAAC,CACvC,GAAIM,MAAM,GAAK,IAAI,EAAIA,MAAM,GAAK,CAAC,CAAE,MAAO,SAAS,CAErD,KAAM,CAAAgB,KAAK,CAAG,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CACvE,KAAM,CAAAC,OAAO,CAAG,CAAC,CACjB,KAAM,CAAAC,SAAS,CAAG,IAAI,CAEtB,KAAM,CAAAC,KAAK,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACtB,MAAM,CAAC,CAAGoB,IAAI,CAACE,GAAG,CAACJ,SAAS,CAAC,CAAC,CAChE,KAAM,CAAAjB,EAAE,CAAG,GAAGsB,UAAU,CAAC,CAACvB,MAAM,CAAGkB,SAAS,EAAIC,KAAK,EAAEK,OAAO,CAACP,OAAO,CAAC,CAAC,IAAID,KAAK,CAACG,KAAK,CAAC,EAAE,CAE1F,MAAO,CAAAlB,EAAE,CACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}